/* Metrowerks Standard Library
 * Copyright C 1995-2001 Metrowerks Corporation.  All rights reserved.
 *
 * $Date: 2001/07/21 18:41:11 $
 * $Revision: 1.23.4.1 $
 */

#include <ansi_parms.h>

#if __MACH__
	#include <assert.h>
#else

#ifndef RC_INVOKED

#ifdef assert		/*- hh 980901 -*/
	#undef assert
#endif

#ifdef NDEBUG
	#define assert(condition) ((void) 0)
#else
	#ifndef _MSL_CASSERT
	#define	_MSL_CASSERT

	_MSL_BEGIN_EXTERN_C																			/*- cc 010409 -*/
	
		#ifdef UNICODE      																	/*-	mm 980724 -*/
	  		_MSL_IMP_EXP_C void  __wchar_assertion_failed(wchar_t const *, char const *, int); 	/*- mm 990415 -*/
		#else
	  		_MSL_IMP_EXP_C void  __assertion_failed(char const *, char const *, int);			/*- mm 990415 -*/
		#endif

	_MSL_END_EXTERN_C																			/*- cc 010409 -*/
			
	#endif /* _MSL_CASSERT */

	#ifdef UNICODE	  																			/*- mm 980724 -*/
		#define assert(condition) ((condition) ? ((void) 0) : __wchar_assertion_failed( L#condition, __FILE__, __LINE__))
	#else
		#define assert(condition) ((condition) ? ((void) 0) : __assertion_failed(#condition,__FILE__, __LINE__))
	#endif

#endif /* def NDEBUG */

#endif /* RC_INVOKED */

#endif /* __MACH__ */

/* Change record:
 * hh  971206 Changed filename from assert.h to cassert and added namespace support
 * hh  971230 added RC_INVOKED wrapper
 * mm  980724 Moved defines of assert(condition) outside __cassert__ wrappers MW08171
 * hh  980901 Indented, and added assert existence test before undef'ing
 * mm  990415 Inserted const into prototype definitions to avoid warnings when #pragma const_strings on in force IL9903-1579	
 * hh  991112 Removed namespace support
 * JWW 001208 Added case for targeting Mach-O
 * cc  010405 removed pragma options align native and reset			  
 * cc  010409 updated defines to JWW new namespace macros
 */