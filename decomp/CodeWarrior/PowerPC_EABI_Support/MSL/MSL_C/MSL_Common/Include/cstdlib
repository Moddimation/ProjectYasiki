/* Metrowerks Standard Library
 * Copyright C 1995-2001 Metrowerks Corporation.  All rights reserved.
 *
 * $Date: 2001/07/21 18:42:22 $
 * $Revision: 1.33.4.1 $
 */

#ifndef _MSL_CSTDLIB
#define _MSL_CSTDLIB

#include <ansi_parms.h>

#if __MACH__
#include <stdlib.h>
#else

#include <div_t.h>
#include <null.h>
#include <size_t.h>

#ifndef __NO_WIDE_CHAR                         /*- mm 980204 -*/
#include <wchar_t.h>                           /*- mm 990217 -*/
#endif                                         /*- mm 980204 -*/

#if (__dest_os == __win32_os)
#include <extras.h>
#endif

#ifndef RC_INVOKED                             /*- hh 971230 -*/

_MSL_BEGIN_NAMESPACE_STD                                    /*- cc  010410 -*/
    _MSL_BEGIN_EXTERN_C                                     /*- cc  010410 -*/

#define RAND_MAX     32767
#define MB_CUR_MAX   3                         /*- mm 010523 -*/

#define EXIT_SUCCESS 0
#define EXIT_FAILURE 1

#if (__dest_os != __powertv_os)
#define _MAX_PATH 1024
#endif

#ifndef _No_Floating_Point
        _MSL_IMP_EXP_C double
                           atof(const char*);
_MSL_IMP_EXP_C double      strtod(const char*, char**);
_MSL_IMP_EXP_C long double strtold(const char*, char**);    /*- mm 990930 -*/
#endif

_MSL_IMP_EXP_C int           atoi(const char*);
_MSL_IMP_EXP_C long          atol(const char*);
_MSL_IMP_EXP_C long          strtol(const char*, char**, int);
_MSL_IMP_EXP_C unsigned long strtoul(const char*, char**, int);

#ifdef __MSL_LONGLONG_SUPPORT__                /*- mm 961219 -*/
_MSL_IMP_EXP_C long long strtoll(const char*, char**, int); /*- mm 961219 -*/
_MSL_IMP_EXP_C unsigned long long strtoull(const char*, char**,
                                           int);            /*- mm 961219 -*/
#endif /*__MSL_LONGLONG_SUPPORT__*/            /*- mm 961220 -*/

_MSL_IMP_EXP_C int    rand(void);
_MSL_IMP_EXP_C void   srand(unsigned int);
_MSL_IMP_EXP_C void*  calloc(size_t, size_t);               /*- mf 990715 -*/
_MSL_IMP_EXP_C void   free(void*);                          /*- mf 990715 -*/
_MSL_IMP_EXP_C void*  malloc(size_t);                       /*- mf 990715 -*/
_MSL_IMP_EXP_C void*  realloc(void*, size_t);               /*- mf 990715 -*/
_MSL_IMP_EXP_C size_t __msize(void*);                       /*- mf 990715 -*/

#if __VEC__
/*
 * AltiVec memory-related routines which 16-byte align the blocks.
 */
_MSL_IMP_EXP_C void* vec_calloc(size_t, size_t);    /*- mf 990715 -*/
_MSL_IMP_EXP_C void  vec_free(void*);               /*- mf 990715 -*/
_MSL_IMP_EXP_C void* vec_malloc(size_t);            /*- mf 990715 -*/
_MSL_IMP_EXP_C void* vec_realloc(void*, size_t);    /*- mf 990715 -*/
#endif                                         /* VEC */

#if (__dest_os == __win32_os)
/*_MSL_IMP_EXP_C */ void  abort(void);
/* _MSL_IMP_EXP_C*/ int   atexit(void (*func)(void));
/* _MSL_IMP_EXP_C */ void exit(int status);
#else
_MSL_IMP_EXP_C void abort(void);
_MSL_IMP_EXP_C void exit(int status);
_MSL_IMP_EXP_C int  atexit(void (*func)(void));
#endif                                         /* __dest_os ==__win32_os */

_MSL_IMP_EXP_C char* getenv(const char*);
_MSL_IMP_EXP_C int   system(const char*);

typedef int (*_compare_function)(const void*, const void*);
/*- mm 961031 -*/                                   /*- cc 042400 -*/

_MSL_IMP_EXP_C void* bsearch(const void*, const void*, size_t, size_t,
                             _compare_function);    /*- mm 961031 -*/

_MSL_IMP_EXP_C void qsort(void*, size_t, size_t,
                          _compare_function);       /*- mm 961031 -*/

#if __POWERPC__

_MSL_IMP_EXP_C int  abs(int);
_MSL_IMP_EXP_C long labs(long);

#ifdef __MSL_LONGLONG_SUPPORT__                /*- mm 990520 -*/
_MSL_IMP_EXP_C long long llabs(long long);          /*- hh 980122 -*/
#endif /*__MSL_LONGLONG_SUPPORT__*/            /*- mm 990520 -*/

#ifndef __cplusplus                            /*- hh 980206 -*/
#if !__MOTO__ && !__MRC__
#define abs(n)  __abs(n)
#define labs(n) __labs(n)
#endif
#endif

#else                                          /* __POWERPC__ */

_MSL_IMP_EXP_C int  abs(int);
_MSL_IMP_EXP_C long labs(long);

#ifdef __MSL_LONGLONG_SUPPORT__                /*- mm 981023 -*/
_MSL_IMP_EXP_C long long llabs(long long); /*- hh 980122 -*/
#endif /* #ifdef __MSL_LONGLONG_SUPPORT__	*/ /*- mm 981023 -*/

#endif                                         /* __POWERPC__ */

_MSL_IMP_EXP_C div_t  div(int, int);
_MSL_IMP_EXP_C ldiv_t ldiv(long, long);

#ifdef __MSL_LONGLONG_SUPPORT__                /*- mm 981023 -*/
_MSL_IMP_EXP_C lldiv_t lldiv(long long, long long); /*- hh 980122 -*/
#endif /* #ifdef __MSL_LONGLONG_SUPPORT__	*/ /*- mm 981023 -*/
/*- hh 980122 -*/
#ifdef __cplusplus
_MSL_END_EXTERN_C          /*- cc  010410 -*/

    inline long
    abs(long n)
{
    return labs(n);
}
inline ldiv_t
div(long numerator, long denominator)
{
    return ldiv(numerator, denominator);
}
#ifdef __MSL_LONGLONG_SUPPORT__                /*- mm 990520 -*/
inline long long
abs(long long n)
{
    return llabs(n);
}
inline lldiv_t
div(long long numerator, long long denominator)
{
    return lldiv(numerator, denominator);
}
#endif /*__MSL_LONGLONG_SUPPORT__*/            /*- mm 990520 -*/

_MSL_BEGIN_EXTERN_C        /*- cc  010410 -*/
#endif                                         /* __cplusplus*/

    _MSL_IMP_EXP_C int
    mblen(const char*, size_t);

#ifndef __NO_WIDE_CHAR                         /*- mm 990624 -*/
_MSL_IMP_EXP_C int    mbtowc(wchar_t*, const char*, size_t);
_MSL_IMP_EXP_C int    wctomb(char*, wchar_t);
_MSL_IMP_EXP_C size_t mbstowcs(wchar_t*, const char*, size_t);
_MSL_IMP_EXP_C size_t wcstombs(char*, const wchar_t*, size_t);
#endif

#if (__dest_os == __wince_os)
unsigned long __cdecl _beginthreadex(void*, unsigned, unsigned(__stdcall*)(void*),
                                     void*, unsigned, unsigned*);
void __cdecl _endthreadex(unsigned);
#endif                                         /*  __dest_os == __wince_os  */

_MSL_END_EXTERN_C          /*- cc  010410 -*/
    _MSL_END_NAMESPACE_STD /*- cc  010410 -*/

#endif                                         /* RC_INVOKED */

#endif                                         /* __MACH__ */

#endif                                         /* _MSL_CSTDLIB */

                                               /* Change record:
                                                * mm  961031 Improved legibility with introduction of typedef
                                                * mm  961220 line 44    Added headers for strtoll and strtoull for long long support
                                                * sm  970723 Disabled all use of doubles when _No_Floating_Point defined.
                                                * mm  970708 Inserted Be changes
                                                * hh  971206 Changed file name from stdlib.h to cstdlib and added namespace support.
                                                * hh  971230 added RC_INVOKED wrapper
                                                * hh  980122 C++ must use C lib. commented out inlined abs and labs
                                                * hh  980122 added long long support llabs, lldiv
                                                * hh  980122 Added C++ inlines for abs and div
                                                * hh  980206 these #defines (abs, labs) interfere with overloaded inlines in C++
                                                * mf  980505 enabled win32 specific prototypes for wince
                                                * hh  980627 changed include from wctype.h to cwctype
                                                * mm  981023 added wrappers round long long support
                                                * blc 990209 added __msize prototype
                                                * mm  990217 Deleted #include of cstddef and replaced by #include <wchar_t.h>
                                                * mf  990404 turned off k6 calling convention for atof and strtod
                                                * mm  990520 Added wrappers to some long long function definitions
                                                * mf  990715 Arg names in prototypes cause conflicts
                                                * vss 990624 guards for longlong and wide char
                                                * mm  990930 Added prototype for strtold
                                                * mm  000210 Added prototype for _itow defined in extras.c
                                                * cc  000219 Added prototype for _putenv
                                                * cc  000320 Added _MSL_IMP_EXP_C
                                                * cc  000424 Removed _MSL_IMP_EXP_C from _compare_function
                                                * cc  000515 Major movement of code to common and platform specific headers
                                                * cc  000515 Version before revision is 1.14.8.12
                                                * cc  000515 Added #include of extras.h for win only
                                                * cc  000515 Moved _gcvt, _itoa, _itow, _ultoa, _strlwr, _splitpath,  _itoa to
                                                * extras.h                                                cc  000515 Moved
                                                * _fullpath, _ltow, _doserrno, _putenv, and _ultow to                                                extras.win32.h                                                cc  000515
                                                * Moved _MAX_DRIVE, _MAX_DIR, _MAX_EXT, _MAX_FNAME, __max,                                                and __min to extras.h                                                JWW
                                                * 001208 Added case for targeting Mach-O                                                cc  000326                                                removed dest_os to be_os                                                cc
                                                * 010405 removed pragma options align native and reset                                                cc  010410 updated to new
                                                * namespace macros                                                mm  010523 UTF-8
                                                * implementation
                                                */
