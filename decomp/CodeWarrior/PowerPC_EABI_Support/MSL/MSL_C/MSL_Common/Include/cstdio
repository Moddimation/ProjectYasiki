/* Metrowerks Standard Library
 * Copyright C 1995-2001 Metrowerks Corporation.  All rights reserved.
 *
 * $Date: 2001/07/21 18:42:16 $
 * $Revision: 1.33.4.1 $
 */

#ifndef _MSL_CSTDIO
#define _MSL_CSTDIO

#include <ansi_parms.h>

#if __MACH__
#include <stdio.h>
#else

#include <eof.h>            /*- vss 980817 -*/
#include <null.h>
#include <size_t.h>
#include <va_list.h>

#ifndef __NO_WIDE_CHAR      /*- mm 980204 -*/
#include <wchar_t.h>        /*- mm 990217 -*/
#endif                      /*- mm 980204 -*/

#include <file_struc.h>     /*- mm 990806 -*/
#include <stdio.posix.h>

#ifndef RC_INVOKED

#pragma options align = native

_MSL_BEGIN_NAMESPACE_STD                                                        /*- cc  010410 -*/
    _MSL_BEGIN_EXTERN_C                                                         /*- cc  010410 -*/

#ifndef _No_Disk_File_OS_Support
        _MSL_IMP_EXP_C int
                   remove (const char*);
_MSL_IMP_EXP_C int rename (const char*, const char*);

_MSL_IMP_EXP_C char* tmpnam (char*);
_MSL_IMP_EXP_C FILE* tmpfile (void);
#endif                      /* ndef _No_Disk_File_OS_Support */

_MSL_IMP_EXP_C void setbuf (FILE*, char*);                                      /*- mf 990715 -*/
_MSL_IMP_EXP_C int  setvbuf (FILE*, char*, int, size_t);                        /*- mf 990715 -*/
_MSL_IMP_EXP_C int  fclose (FILE*);                                             /*- mf 990715 -*/
_MSL_IMP_EXP_C int  fflush (FILE*);                                             /*- mf 990715 -*/

#ifndef _No_Disk_File_OS_Support
_MSL_IMP_EXP_C FILE* fopen (const char*, const char*);
_MSL_IMP_EXP_C FILE* freopen (const char*, const char*, FILE*);                 /*- mf 990715 -*/
#endif                      /* ndef _No_Disk_File_OS_Support */

#ifndef __NO_WIDE_CHAR      /*- mm 980204 -*/
_MSL_IMP_EXP_C int fwide (FILE*, int);                                          /*- mm 980825 -*/
#endif /* __NO_WIDE_CHAR */ /*- mm 980204 -*/

_MSL_IMP_EXP_C void setbuf (FILE*, char*);                                      /*- mf 990715-*/
_MSL_IMP_EXP_C int  setvbuf (FILE*, char*, int, size_t);                        /*- mf 990715 -*/
_MSL_IMP_EXP_C int  fprintf (FILE*, const char*, ...);                          /*- mf 990715 -*/
_MSL_IMP_EXP_C int  fscanf (FILE*, const char*, ...);                           /*- mf 990715 -*/

#if (__dest_os == __n64_os) /*- ad 990128 -*/
extern void printf (const char* format, ...);
#else
_MSL_IMP_EXP_C int printf (const char*, ...);
#endif

_MSL_IMP_EXP_C int scanf (const char*, ...);
_MSL_IMP_EXP_C int sprintf (char*, const char*, ...);
_MSL_IMP_EXP_C int snprintf (char*, size_t, const char*, ...);
_MSL_IMP_EXP_C int sscanf (const char*, const char*, ...);

#if (__INTEL__ || __MIPS__)
_MSL_IMP_EXP_C int swprintf (wchar_t*, size_t, const wchar_t*, ...);            /*- JCM 980226 -*/
#endif

_MSL_IMP_EXP_C int    vfscanf (FILE*, const char*, va_list arg);
/*- mf 990715 -*/                                                               /*- mm 990921 -*/
_MSL_IMP_EXP_C int    vsscanf (const char* s, const char* format, va_list arg); /*- mm 990921 -*/
_MSL_IMP_EXP_C int    vscanf (const char* format, va_list arg);                 /*- mm 000831 -*/
_MSL_IMP_EXP_C int    vfprintf (FILE*, const char* format, va_list arg);        /*- mf 990715 -*/
_MSL_IMP_EXP_C int    vprintf (const char* format, va_list arg);
_MSL_IMP_EXP_C int    vsprintf (char* s, const char* format, va_list arg);
_MSL_IMP_EXP_C int    vsnprintf (char* s, size_t n, const char* format, va_list arg);
_MSL_IMP_EXP_C int    fgetc (FILE*);                                            /*- mf 990715 -*/
_MSL_IMP_EXP_C char*  fgets (char*, int, FILE*);                                /*- mf 990715 -*/
_MSL_IMP_EXP_C int    fputc (int, FILE*);                                       /*- mf 990715 -*/
_MSL_IMP_EXP_C int    fputs (const char*, FILE*);                               /*- mf 990715 -*/
_MSL_IMP_EXP_C char*  gets (char*);
_MSL_IMP_EXP_C int    puts (const char*);
_MSL_IMP_EXP_C int    ungetc (int, FILE*);                                      /*- mf 990715 -*/
_MSL_IMP_EXP_C size_t fread (void*, size_t memb_size, size_t num_memb, FILE*);  /*- mf 990715 -*/
_MSL_IMP_EXP_C size_t __fread (void*, size_t, size_t, FILE*);                   /*- mm 001018 -*/
_MSL_IMP_EXP_C size_t fwrite (const void*,
                              size_t memb_size,
                              size_t num_memb,
                              FILE*);                                           /*- mf 990715 -*/
_MSL_IMP_EXP_C size_t __fwrite (const void*, size_t, size_t, FILE*);            /*- mm 001018 -*/
_MSL_IMP_EXP_C int    fgetpos (FILE*, fpos_t* pos);                             /*- mf 990715 -*/
_MSL_IMP_EXP_C long   ftell (FILE*);                                            /*- mf 990715 -*/
_MSL_IMP_EXP_C fpos_t _ftell (FILE*);                                           /*- mm 970708 -*/
_MSL_IMP_EXP_C int    fsetpos (FILE*, const fpos_t* pos);                       /*- mf 990715 -*/
_MSL_IMP_EXP_C int    fseek (FILE*, long, int);                                 /*- mf 990715 -*/
_MSL_IMP_EXP_C int    _fseek (FILE*, fpos_t, int);                              /*- mm 970708 -*/
_MSL_IMP_EXP_C void   rewind (FILE*);                                           /*- mf 990715 -*/
_MSL_IMP_EXP_C void   clearerr (FILE*);                                         /*- mf 990715 -*/
_MSL_IMP_EXP_C void   perror (const char*);
_MSL_IMP_EXP_C int    __get_char (FILE*);                                       /*- mf 990715 -*/
_MSL_IMP_EXP_C int    __put_char (int c, FILE*);                                /*- mf 990715 -*/

/* The following section inserted  mm 990325 */
typedef struct
{
    char*  CharStr;
    size_t MaxCharCount;
    size_t CharsWritten;
} __OutStrCtrl;

typedef struct
{
    char* NextChar;
    int   NullCharDetected;
} __InStrCtrl;

void* __FileWrite (void*, const char*, size_t);
void* __StringWrite (void*, const char*, size_t);
int   __FileRead (void*, int, int);
int   __StringRead (void*, int, int);

enum __ReadProcActions
{
    __GetAChar,
    __UngetAChar,
    __TestForError
};
#ifndef __NO_WIDE_CHAR
typedef struct
{
    wchar_t* wCharStr;
    size_t   MaxCharCount;
    size_t   CharsWritten;
} __wOutStrCtrl;

typedef struct
{
    wchar_t* wNextChar;
    int      wNullCharDetected;
} __wInStrCtrl;

void*  __wFileWrite (void*, const wchar_t*, size_t);
void*  __wStringWrite (void*, const wchar_t*, size_t);
wint_t __wFileRead (void*, wint_t, int);
wint_t __wStringRead (void*, wint_t, int);

enum __WReadProcActions
{
    __GetAwChar,
    __UngetAwChar,
    __TestForwcsError
};
#endif                      /* #ifndef __NO_WIDE_CHAR */

/*- mm 990325 -*/

_MSL_IMP_EXP_C FILE* __handle_open (__file_handle handle, const char* mode);
FILE* __handle_reopen (__file_handle handle, const char* mode, FILE*); /*- mf 990715 -*/

void __set_idle_proc (FILE*, __idle_proc idle_proc);                   /*- mf 990715 -*/

#if (__dest_os == __win32_os || __dest_os == __wince_os)
/*
 * I'm putting this declaration here because it is in Visual C++'s stdio.h
 * I copied this declaration from unix.win32.h. They should match.
 */
/*FILE *fdopen(int fildes, char *type);*/
/*
 * defines added for compatibility with older MS C code
 */
#define _vsnprintf __std (vsnprintf)
#define _snprintf  snprintf
#endif

#ifdef __cplusplus

_MSL_END_EXTERN_C                          /*- cc  010410 -*/

    inline int
    getc (FILE* file)

#ifndef __NO_WIDE_CHAR      /*- mm 980204 -*/
{
    return (fwide (file, -1) >= 0) ? EOF
                                   : (file->buffer_len-- ? *file->buffer_ptr++ : __get_char (file));
}
#else

{
    return file->buffer_len-- ? *file->buffer_ptr++ : __get_char (file);
}

#endif /* __NO_WIDE_CHAR */ /*- mm 980204 -*/

inline int
putc (int c, FILE* file)

#ifndef __NO_WIDE_CHAR      /*- mm 980204 -*/
{
    return (fwide (file, -1) >= 0) ? EOF : /*- vss 990129 -*/
               (file->buffer_len-- ? (*file->buffer_ptr++ = (unsigned char)c)
                                   : __put_char (c, file));
}

#else

{
    return file->buffer_len-- ? (*file->buffer_ptr++ = (unsigned char)c) : __put_char (c, file);
} /*- mm 990202 -*/

#endif /* __NO_WIDE_CHAR */ /*- mm 980204 -*/
inline int
getchar ()
{
    return getc (stdin);
}

inline int
putchar (int c)
{
    return putc (c, stdout);
}

inline int
feof (FILE* file)
{
    return file->state.eof;
}

inline int
ferror (FILE* file)
{
    return file->state.error;
}
#else

_MSL_IMP_EXP_C int getc (FILE*);        /*- mf 990715 -*/
_MSL_IMP_EXP_C int putc (int c, FILE*); /*- mf 990715 -*/

#ifndef __NO_WIDE_CHAR      /*- mm 980204 -*/
#define getc(file)                                                                                 \
    ((fwide (file, -1) >= 0) ? EOF                                                                 \
     : (file)->buffer_len--  ? (int)*(file)->buffer_ptr++                                          \
                             : __std (__get_char) (file))
#else                       /*- mm 980204 -*/
#define getc(file) ((file)->buffer_len-- ? (int)*(file)->buffer_ptr++ : __std (__get_char) (file))
#endif /* __NO_WIDE_CHAR */ /*- mm 980204 -*/

#ifndef __NO_WIDE_CHAR      /*- mm 980204 -*/
#define putc(c, file)                                                                              \
    ((fwide (file, -1) >= 0) ? EOF                                                                 \
     : (file)->buffer_len--  ? (int)(*(file)->buffer_ptr++ = (unsigned char)(c))                   \
                             : __std (__put_char) (c, file)) /*- mm 990202 -*/ /*- mm 990728 -*/
#else                                                                         /*- mm 980204 -*/
#define putc(c, file)                                                                              \
    ((file)->buffer_len-- ? (int)(*(file)->buffer_ptr++ = (unsigned char)(c))                      \
                          : __std (__put_char) (c, file)) /*- mm 990202 -*/   /*- mm 990728 -*/
#endif /* __NO_WIDE_CHAR */                                                   /*- mm 980204 -*/

_MSL_IMP_EXP_C int getchar (void);
_MSL_IMP_EXP_C int putchar (int c);

#define getchar()    __std (getc) (stdin)
#define putchar(c)   __std (putc) (c, stdout)

_MSL_IMP_EXP_C int feof (FILE*);        /*- mf 990715 -*/
_MSL_IMP_EXP_C int ferror (FILE*);      /*- mf 990715 -*/

#define feof(file)   ((file)->state.eof)
#define ferror(file) ((file)->state.error)

#endif

/* #endif  hh 980121 There should not be C++ versions of the C libs */

_MSL_END_NAMESPACE_STD /*- cc  010410 -*/

#if (__dest_os == __wince_os)
    enum
{
    stdio_tofiles,
    stdio_tocom,
    stdio_custom
}; /* mf-- allows CE users to
/* customize their io-- the default is to/from files */
#endif

#pragma options align = reset

#endif                                                                        /* RC_INVOKED */

#endif                                                                        /* __MACH__ */

#endif                                                                        /* _MSL_CSTDIO */

                                                                              /* Change record:
                                                                               * mm  961031 Changes for Pascal
                                                                               * mm  961203 Changed files to __files
                                                                               * mm  970708 Inserted Be changes
                                                                               * SM  970709 Added conditional support for embedded targets via the
                                                                                            __no_os, _No_Console, and _Unbuffered_Console macros.
                                                                               * MA  970720 Changed __no_os to _No_Disk_File_OS_Support.
                                                                               * hh  971206 Changed file name from stdio.h to cstdio and added namespace support
                                                                               * hh  971230 added RC_INVOKED wrapper
                                                                               * hh  980121 added <cstddef> for wchar_t
                                                                               * mm  980204 added fields in file structure for wide characters.
                                                                               * blc 980301 added vsnprintf, snprintf from C9X draft
                                                                               * rjk 980313 add DLLDATA for exporting data in dll
                                                                               * hh  980627 changed include from wctype.h to cwctype
                                                                               * mm  980708 Corrected space allotment for the values of __file_kinds in
                                                                               __file_modes
                                                                               * vss 980817 Define EOF in its own file and include it here to avoid circular dep
                                                                               * mm  980825 Removed variable names from prototype for fwide to avoid problems with
                                                                               PH tests
                                                                               * mm  981007 Changes for dynamic allocation of file structures.
                                                                               * ad 1.28.99 take out the printf() prototype for nintendo
                                                                               * vss 990129 Get rid of warning message by casting to uchar
                                                                               * mm  990202 Made similar changes as in vss 990129 in three other places
                                                                               * mm  990217 Deleted #include cstddef as not needed and replaced by #include
                                                                               <wchar_t.h>
                                                                               * mm  990325 Changes to permit separation of string format i/o functions from file
                                                                               i/o
                                                                               * hh  990507 Changed #include <wctype.h> to <cwctype>
                                                                               * hh  990520 Fixed up the stdout, etc. macros to be namespace aware
                                                                               * mm  990728 Corrected mm990202.
                                                                               * mf  990715 Arg names in prototypes cause conflicts
                                                                               * mm  990807 Moved file structure definitions to file_str.h
                                                                               * mm  990921 __vfscanf and __vsscanf changed to vfscanf and vsscanf since they are
                                                                               in C9x
                                                                               * cc  000209 Added prototype for fileno  and # define
                                                                               * cc  000210 Added prototype for _fdopen
                                                                               * cc  000215 Removed prototype for fdopne
                                                                               * mf  000403 moved fdopen and fileno to extern "C" and got rid of posix macros for
                                                                               __inlines
                                                                               * cc  000428 moved _tell to extras.win32.h
                                                                               * mm  000831 Added vscanf since it is now in C99 WB1-16280
                                                                               * mm  001018 Added __fread and __fwrite as part of thread safety.
                                                                               * JWW 001208 Added case for targeting Mach-O
                                                                               * mm  010122 Changed second parameter to fdopen and _fdopen to const char* to match
                                                                               POSIX standard
                                                                               * cc  000326 removed dest_os to be_os
                                                                               * cc  010410 updated to new namespace macros
                                                                               * mm  010518 Eliminated #include of unistd.h for Windows since it is not needed
                                                                               there.
                                                                               * cc  010521 moved fileno and fdopen to posix only header
                                                                               */
