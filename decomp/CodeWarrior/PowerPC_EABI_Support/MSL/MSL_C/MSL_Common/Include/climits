/* Metrowerks Standard Library
 * Copyright C 1995-2001 Metrowerks Corporation.  All rights reserved.
 *
 * $Date: 2001/07/21 18:41:33 $
 * $Revision: 1.28.4.1 $
 */

#ifndef _MSL_CLIMITS
#define _MSL_CLIMITS

#include <ansi_parms.h>                     /*- mm 970804 -*/

#if __MACH__
	#include <limits.h>
#else

#ifndef RC_INVOKED  						/*- hh 971230 -*/

/* Below to be moved into ansi_prefix.XXX.h */
#if   defined(__m56800__)
	#define _CHAR_BIT             16
	#define _SIZEOF_SHRT          1
	#define _SIZEOF_INT           1
	#define _SIZEOF_LONG          2
	#ifdef __MSL_LONGLONG_SUPPORT__
		#define _SIZEOF_LONG_LONG 4
	#endif
#elif defined(__m56300__)
	#define _CHAR_BIT             24
	#define _SIZEOF_SHRT          1
	#define _SIZEOF_INT           1
	#define _SIZEOF_LONG          1
	#ifdef __MSL_LONGLONG_SUPPORT__
		#define _SIZEOF_LONG_LONG 1
	#endif
#elif defined(__m56800E__)
	#define _CHAR_BIT             8
	#define _SIZEOF_SHRT          2
	#define _SIZEOF_INT           2
	#define _SIZEOF_LONG          4
	#ifdef __MSL_LONGLONG_SUPPORT__
		#define _SIZEOF_LONG_LONG 8
	#endif
#elif defined(__MC68K__)
	#define _CHAR_BIT             8
	#define _SIZEOF_SHRT          2
	#if __fourbyteints__
		#define _SIZEOF_INT       4
	#else
		#define _SIZEOF_INT       2
	#endif
	#define _SIZEOF_LONG          4
	#ifdef __MSL_LONGLONG_SUPPORT__
		#define _SIZEOF_LONG_LONG 8
	#endif
#endif
/* Above to be moved into ansi_prefix.XXX.h */
/* Default configuration */

#ifndef _CHAR_BIT
	#define _CHAR_BIT             8
#endif

#ifndef _SIZEOF_SHRT
	#define _SIZEOF_SHRT          2
#endif

#ifndef _SIZEOF_INT
	#define _SIZEOF_INT           4
#endif

#ifndef _SIZEOF_LONG
	#define _SIZEOF_LONG          4
#endif

#ifdef __MSL_LONGLONG_SUPPORT__
	#ifndef _SIZEOF_LONG_LONG
		#define _SIZEOF_LONG_LONG 8
	#endif
#endif

/* Build macros based  on platform configuration */

#define MB_LEN_MAX 				  3			/*- mm 010523 -*/
#define CHAR_BIT                  _CHAR_BIT

#if CHAR_BIT == 8
	#define SCHAR_MAX             0x7f
	#define	UCHAR_MAX             0xffU
#elif CHAR_BIT == 16
	#define SCHAR_MAX             0x7fff
	#define	UCHAR_MAX             0xffffU
#elif CHAR_BIT == 24
	#define SCHAR_MAX             0x7fffff
	#define	UCHAR_MAX             0xffffffU
#else
	#error unsupported size for CHAR_BIT
#endif

#define SCHAR_MIN                (~SCHAR_MAX)

#if __option (unsigned_char)
	#define CHAR_MIN              0U
	#define CHAR_MAX              UCHAR_MAX
#else
	#define CHAR_MIN              SCHAR_MIN			
	#define CHAR_MAX              SCHAR_MAX			
#endif

#if _SIZEOF_SHRT*CHAR_BIT == 16
	#define SHRT_MAX              0x7fff
	#define	USHRT_MAX             0xffffU
#elif _SIZEOF_SHRT*CHAR_BIT == 24
	#define SHRT_MAX              0x7fffff
	#define	USHRT_MAX             0xffffffU
#else
	#error unsupported size for sizeof short
#endif

#define SHRT_MIN                 (~SHRT_MAX)

#if _SIZEOF_INT*CHAR_BIT == 16
	#define INT_MAX               0x7fff
	#define	UINT_MAX              0xffffU
#elif _SIZEOF_INT*CHAR_BIT == 24
	#define INT_MAX               0x7fffff
	#define	UINT_MAX              0xffffffU
#elif _SIZEOF_INT*CHAR_BIT == 32
	#define INT_MAX               0x7fffffff
	#define	UINT_MAX              0xffffffffU
#else
	#error unsupported size for sizeof int
#endif

#define INT_MIN                   (~INT_MAX)

#if _SIZEOF_LONG*CHAR_BIT == 24
	#define LONG_MAX              0x7fffffL
	#define	ULONG_MAX             0xffffffUL
#elif _SIZEOF_LONG*CHAR_BIT == 32
	#define LONG_MAX              0x7fffffffL
	#define	ULONG_MAX             0xffffffffUL
#else
	#error unsupported size for sizeof long
#endif

#define LONG_MIN                  (~LONG_MAX)

#ifdef __MSL_LONGLONG_SUPPORT__
	#if _SIZEOF_LONG_LONG*CHAR_BIT == 24
		#define LLONG_MAX         0x7fffffLL
		#define	ULLONG_MAX        0xffffffULL
	#elif _SIZEOF_LONG_LONG*CHAR_BIT == 32
		#define LLONG_MAX         0x7fffffffLL
		#define	ULLONG_MAX        0xffffffffULL
	#elif _SIZEOF_LONG_LONG*CHAR_BIT == 64
		#define LLONG_MAX         0x7fffffffffffffffLL
		#define	ULLONG_MAX        0xffffffffffffffffULL
	#else
		#error unsupported size for sizeof long long
	#endif

	#define LLONG_MIN             (~LLONG_MAX)
#endif 

#endif /* RC_INVOKED */

#endif /* __MACH__ */

#endif /* _MSL_CLIMITS */

/* Change record: 
 * bkoz961216 line 49 added long long typedefs
 * bkoz970214 added default __dest_os __mac_os
 * mm  970804 Added include of ansi_parms.h to ensure __mac_os, __be_os, etc are defined.
 * hh  971206 Changed filename from limits.h to climits and added namespace support
 * hh  971230 added RC_INVOKED wrapper
 * hh  980107 changed names of long long macros to support standard
 * mm  981014 Added specifications for DSP568
 * mm  981029 Changed __DSP568 to __m56800__
 * mm  981104 Added definition of ints for mc568000
 * mm  000201 Corrected CHAR_MAX and CHAR_MIN to allow for "use unsigned char" option
 * JWW 001208 Added case for targeting Mach-O
 * mm  010303 Added missing integer suffixes WB1-20337
 * cc  000326 removed dest_os to be_os 
 * hh  010402 Rewrite
 * mm  010523 UTF-8 implementation
 */