/* Metrowerks Standard Library
 * Copyright C 1995-2001 Metrowerks Corporation.  All rights reserved.
 *
 * $Date: 2001/07/21 18:42:34 $
 * $Revision: 1.34.4.1 $
 */

#ifndef _MSL_CTIME
#define _MSL_CTIME

#include <ansi_parms.h>

#if __MACH__
	#include <time.h>
#else

#include <null.h>
#include <size_t.h>

#if (__dest_os	== __win32_os )
	#include <extras.h>
	#include <time.win32.h>
#endif

#ifndef RC_INVOKED   /*- hh 971230 -*/

_MSL_BEGIN_NAMESPACE_STD	/*- cc 010409 -*/
_MSL_BEGIN_EXTERN_C			/*- cc 010409 -*/

	/*
	 *		In order for __dest_os to be defined, the appropriate file
	 *		<ansi_prefix.*.h> must be #included before this file, if you
	 *		are on a mac and __dest_os is not defined __mac_os is set.
	 *		__dest_os is needed to determine the correct value for
	 *		CLOCKS_PER_SEC below.
	 */

	#pragma options align=native

	#if (__dest_os == __mac_os)
		#include <timesize.mac.h>
	  	#if defined(__TIMESIZE_DOUBLE__) 
	    	#define CLOCKS_PER_SEC	1000000  /*- jz 971222 -*/
	      	typedef double clock_t;
	  	#else
	      	#define CLOCKS_PER_SEC	60
	      	typedef unsigned long	clock_t;  
	  	#endif

	#elif (__dest_os == __win32_os || __dest_os == __wince_os)
		
		#define CLOCKS_PER_SEC	1000
		#define CLK_TCK         CLOCKS_PER_SEC
		typedef long	clock_t;					/*- KO 961011 -*/
		
	#elif defined(__m56800__) || \
	      defined(__m56800E__)							
				
	/*
	 *			 !! WARNING !!
	 *	Based on 40MHZ crystal, 25 ns cycle, 2 cycles per tick
	 *
	 *		!! YOUR BOARD MAY BE DIFFERENT !!
	 */
			typedef unsigned long clock_t;								/*- mm 981015 -*/
			#define CLOCKS_PER_SEC 20000000								/*- mm 981015 -*/

	#elif __dest_os == __ppc_eabi && !defined(_No_Time_OS_Support)
		
		#if defined(_Generic_PPC_EABI_OS)
			typedef unsigned long clock_t;
			#define CLOCKS_PER_SEC	60
		#endif

		#elif __dest_os == __n64_os										/*- ad 990128 -*/
			typedef unsigned long clock_t;
		#define CLOCKS_PER_SEC	1000000
	#elif __dest_os == __dolphin_os								/* sw 08.21.00 */
	typedef long long clock_t;
	#define CLOCKS_PER_SEC OS_TIMER_CLOCK

	#endif

	/* KO 960912: Put the Win32 stuff inside an ifdef block. Changed it to long
	to match  Microsoft's definition of time_t.*/
	#ifndef _TIME_T_DEFINED
		typedef long time_t;										/*- mm 000127 -*/
			#define _TIME_T_DEFINED 				/* avoid multiple def's of time_t */
	#endif

	struct tm {
		int	tm_sec;
		int	tm_min;
		int	tm_hour;
		int	tm_mday;
		int	tm_mon;
		int	tm_year;
		int	tm_wday;
		int	tm_yday;
		int	tm_isdst;
	};

	#ifndef _No_Time_OS_Support
		_MSL_IMP_EXP_C clock_t			clock(void);
	#endif
		
	#ifndef _No_Floating_Point
		_MSL_IMP_EXP_C double			difftime(time_t, time_t);
	#endif
	
	_MSL_IMP_EXP_C time_t				mktime(struct tm *);
	_MSL_IMP_EXP_C time_t				time(time_t *);
	_MSL_IMP_EXP_C char *				asctime(const struct tm *);
	_MSL_IMP_EXP_C char *				ctime(const time_t *);
	_MSL_IMP_EXP_C struct tm *			gmtime(const time_t *);
	_MSL_IMP_EXP_C struct tm *			localtime(const time_t *);
	_MSL_IMP_EXP_C size_t				strftime(char *, size_t, const char *, const struct tm *);
	
	#ifndef _No_Time_OS_Support
		clock_t	__get_clock(void);
		time_t	__get_time(void);
		int		__to_gm_time(time_t * time);
		int     __isdst(void);					/*- mm 000420 -*/
	#endif

_MSL_END_EXTERN_C	/*- cc 010409 -*/
_MSL_END_NAMESPACE_STD	/*- cc 010409 -*/

#pragma options align=reset

#endif /* RC_INVOKED */

#endif /* __MACH__ */

#endif /* _MSL_CTIME */

/* Change record:
 * mm  960927 Inserted setting of __dest_os to __mac_os when not otherwise set.
 * mm  960927 Removed duplicate definition of time_t 
 * KO  960912 Made typedef for Win32 time_t in accord with Microsoft's definition
 * KO  961011 Made typedef for Win32 clock_t in accord with Microsoft's definition
 * FS  970620 Add line 65 for PPC 821 EABI
 * SCM 970723 Disabled difftime when _No_Floating_Point defined.
 * 			  Disabled OS-dependent functions when _No_Time_OS_Support defined.
 * hh  971206 Changed file name from time.h to ctime and added namespace support.
 * jz  971222 Increase clock resolution from a 60MHz clock to higher frequency supported
 *            by O/S.
 * hh  971230 added RC_INVOKED wrapper
 * hh  980408 wrapped in #ifndef _No_Floating_Point
 * mm  981015 added definitions for DSP56800
 * mm  981029 changed __DSP568 to __m56800__
 * mm  990127 Removed reference to power_tv
 * ad  990128 added nintendo support
 * cc  991220 added  tzset 
 * mm  000127 Change to make Mac epoch 1970Jan27 to accord with POSIX and MSL on Windows.  MW07637
 * cc  000512 Moved _strdate out to extras.h
 * cc  000515 Made if posix for tzset and moved it out of namespace
 * JWW 001208 Added case for targeting Mach-O
 * cc  000326 removed dest_os to be_os 
 * cc  010409 updated defines to JWW new namespace macros
 * mm  010420 Added prototype for __isdst 
 */